-- MySQL Script generated by MySQL Workbench
-- 07/22/15 23:50:43
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
-- -----------------------------------------------------
-- Schema mydb2
-- -----------------------------------------------------
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`VEHICLE CLASS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`VEHICLE CLASS` (
  `class_id` INT NOT NULL,
  `class description` VARCHAR(45) NULL,
  PRIMARY KEY (`class_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ADDRESS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ADDRESS` (
  `address` VARCHAR(45) NOT NULL,
  `address line_1` VARCHAR(45) NULL,
  `address line_2` VARCHAR(45) NULL,
  `address line_3` VARCHAR(45) NULL,
  `address line_4` VARCHAR(45) NULL,
  `city/town` VARCHAR(45) NULL,
  `state/UT` VARCHAR(45) NULL,
  `country` VARCHAR(45) NULL,
  `postal zip code` VARCHAR(45) NULL,
  `other details` VARCHAR(45) NULL,
  PRIMARY KEY (`address`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`OWNER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`OWNER` (
  `Owner_id` INT NOT NULL,
  `ADDRESS_address` VARCHAR(45) NOT NULL,
  `contact number` VARCHAR(45) NULL,
  `email address` VARCHAR(45) NULL,
  `other details` VARCHAR(45) NULL,
  PRIMARY KEY (`Owner_id`),
  INDEX `fk_OWNER_ADDRESS1_idx` (`ADDRESS_address` ASC),
  CONSTRAINT `fk_OWNER_ADDRESS1`
    FOREIGN KEY (`ADDRESS_address`)
    REFERENCES `mydb`.`ADDRESS` (`address`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`VEHICLE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`VEHICLE` (
  `Vehicle_Full number` VARCHAR(45) NOT NULL,
  `State/UT code` VARCHAR(45) NULL,
  `District Code` VARCHAR(45) NULL,
  `4 digit unique number` VARCHAR(45) NULL,
  `Regnum_id` INT NOT NULL,
  `date of registration` DATE NULL,
  `VEHICLE CLASS_Vehicleclass_id` INT NOT NULL,
  `Manufacturer_id` INT NOT NULL,
  `manufacturer description` VARCHAR(45) NULL,
  `Colour_id` INT NOT NULL,
  `colour description` VARCHAR(45) NULL,
  `OWNER_Owner_id` INT NOT NULL,
  `Other details` VARCHAR(45) NULL,
  PRIMARY KEY (`Regnum_id`, `Manufacturer_id`, `Colour_id`, `Vehicle_Full number`),
  INDEX `fk_VEHICLE_VEHICLE CLASS1_idx` (`VEHICLE CLASS_Vehicleclass_id` ASC),
  INDEX `fk_VEHICLE_OWNER1_idx` (`OWNER_Owner_id` ASC),
  CONSTRAINT `fk_VEHICLE_VEHICLE CLASS1`
    FOREIGN KEY (`VEHICLE CLASS_Vehicleclass_id`)
    REFERENCES `mydb`.`VEHICLE CLASS` (`class_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_VEHICLE_OWNER1`
    FOREIGN KEY (`OWNER_Owner_id`)
    REFERENCES `mydb`.`OWNER` (`Owner_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`LICENCE VEHICLE CLASS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`LICENCE VEHICLE CLASS` (
  `licenceclass_id` INT NOT NULL,
  `issue date` DATE NULL,
  `expiry date` DATE NULL,
  PRIMARY KEY (`licenceclass_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`LICENCE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`LICENCE` (
  `Licence_id` INT NOT NULL,
  `date of issue` DATE NULL,
  `date of expiry` DATE NULL,
  `LICENCE VEHICLE CLASS_licenceclass_id` INT NOT NULL,
  PRIMARY KEY (`Licence_id`),
  INDEX `fk_LICENCE_LICENCE VEHICLE CLASS1_idx` (`LICENCE VEHICLE CLASS_licenceclass_id` ASC),
  CONSTRAINT `fk_LICENCE_LICENCE VEHICLE CLASS1`
    FOREIGN KEY (`LICENCE VEHICLE CLASS_licenceclass_id`)
    REFERENCES `mydb`.`LICENCE VEHICLE CLASS` (`licenceclass_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`LICENCEE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`LICENCEE` (
  `Licencee_id` INT NOT NULL,
  `LICENCE_Licence_id` INT NOT NULL,
  `ADDRESS_address` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Licencee_id`),
  INDEX `fk_LICENCEE_LICENCE1_idx` (`LICENCE_Licence_id` ASC),
  INDEX `fk_LICENCEE_ADDRESS1_idx` (`ADDRESS_address` ASC),
  CONSTRAINT `fk_LICENCEE_LICENCE1`
    FOREIGN KEY (`LICENCE_Licence_id`)
    REFERENCES `mydb`.`LICENCE` (`Licence_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_LICENCEE_ADDRESS1`
    FOREIGN KEY (`ADDRESS_address`)
    REFERENCES `mydb`.`ADDRESS` (`address`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TRAFFIC POLICE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`TRAFFIC POLICE` (
  `police_id` INT NOT NULL,
  `ADDRESS_address` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`police_id`),
  INDEX `fk_TRAFFIC POLICE_ADDRESS1_idx` (`ADDRESS_address` ASC),
  CONSTRAINT `fk_TRAFFIC POLICE_ADDRESS1`
    FOREIGN KEY (`ADDRESS_address`)
    REFERENCES `mydb`.`ADDRESS` (`address`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Licence offence`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Licence offence` (
  `TRAFFIC POLICE_police_id` INT NOT NULL,
  `Licenceoffence_id` INT NOT NULL,
  `LICENCE_Licence_id` INT NOT NULL,
  `date of licence offence` DATE NULL,
  `panchayat` VARCHAR(45) NULL,
  PRIMARY KEY (`Licenceoffence_id`),
  INDEX `fk_Licence offence_LICENCE1_idx` (`LICENCE_Licence_id` ASC),
  INDEX `fk_Licence offence_TRAFFIC POLICE1_idx` (`TRAFFIC POLICE_police_id` ASC),
  CONSTRAINT `fk_Licence offence_LICENCE1`
    FOREIGN KEY (`LICENCE_Licence_id`)
    REFERENCES `mydb`.`LICENCE` (`Licence_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Licence offence_TRAFFIC POLICE1`
    FOREIGN KEY (`TRAFFIC POLICE_police_id`)
    REFERENCES `mydb`.`TRAFFIC POLICE` (`police_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Vehicle Offence`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Vehicle Offence` (
  `TRAFFIC POLICE_police_id` INT NOT NULL,
  `Vehicleoffence_id` INT NOT NULL,
  `VEHICLE_Vehicle_Full number` VARCHAR(45) NOT NULL,
  `date of vehicle offence` DATE NULL,
  `panchayat` VARCHAR(45) NULL,
  PRIMARY KEY (`Vehicleoffence_id`),
  INDEX `fk_Vehicle Offence_VEHICLE1_idx` (`VEHICLE_Vehicle_Full number` ASC),
  INDEX `fk_Vehicle Offence_TRAFFIC POLICE1_idx` (`TRAFFIC POLICE_police_id` ASC),
  CONSTRAINT `fk_Vehicle Offence_VEHICLE1`
    FOREIGN KEY (`VEHICLE_Vehicle_Full number`)
    REFERENCES `mydb`.`VEHICLE` (`Vehicle_Full number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Vehicle Offence_TRAFFIC POLICE1`
    FOREIGN KEY (`TRAFFIC POLICE_police_id`)
    REFERENCES `mydb`.`TRAFFIC POLICE` (`police_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`OFFENCE TYPE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`OFFENCE TYPE` (
  `Offencetype_id` INT NOT NULL,
  `Licenceoffence_Licenceoffence_id` INT NOT NULL,
  `Vehicle Offence_Vehicleoffence_id` INT NOT NULL,
  PRIMARY KEY (`Offencetype_id`),
  INDEX `fk_OFFENCE_Licence offence1_idx` (`Licenceoffence_Licenceoffence_id` ASC),
  INDEX `fk_OFFENCE_Vehicle Offence1_idx` (`Vehicle Offence_Vehicleoffence_id` ASC),
  CONSTRAINT `fk_OFFENCE_Licence offence1`
    FOREIGN KEY (`Licenceoffence_Licenceoffence_id`)
    REFERENCES `mydb`.`Licence offence` (`Licenceoffence_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_OFFENCE_Vehicle Offence1`
    FOREIGN KEY (`Vehicle Offence_Vehicleoffence_id`)
    REFERENCES `mydb`.`Vehicle Offence` (`Vehicleoffence_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

show databases;
select database();
show tables;

-- select from vehicle,licence,licencee,offence type
select * from vehicle;
select * from licence;
select * from licencee;
select * from `offence type`;
-- 

-- select all vehicles which have atleast one offence
select distinct vehicle_offence.vehicleoffence_id,vehicle.`Vehicle_Full number`,
vehicle_offence.date_of_vehicle_offence,vehicle_offence.panchayat
from vehicle
inner join vehicle_offence
on vehicle.`Vehicle_Full number`=vehicle_offence.VEHICLE_Vehicle_Fullnumber;
--

-- select all licences which have atleast one offence
select distinct `licence offence`.Licenceoffence_id,licence.Licence_id,
`licence offence`.`date of licence offence`,`licence offence`.panchayat
from licence
inner join `licence offence`
on licence.Licence_id=`licence offence`.LICENCE_Licence_id;
--

-- select licences with a specific offence
select distinct `offence type`.Offencetype_id,`licence offence`.Licenceoffence_id,licence.Licence_id,`licence offence`.`date of licence offence`,`licence offence`.panchayat
from `offence type`
inner join `licence offence`
on `offence type`.Licenceoffence_Licenceoffence_id= `licence offence`.Licenceoffence_id
inner join licence
on licence.Licence_id=`licence offence`.LICENCE_Licence_id
where `offence type`.Offencetype_id='';
--

-- select vehicles with a specific offence
select distinct `offence type`.Offencetype_id,vehicle_offence.vehicleoffence_id,vehicle.`Vehicle_Full number`,
vehicle_offence.date_of_vehicle_offence,vehicle_offence.panchayat
from `offence type`
inner join vehicle_offence
on `offence type`.`Vehicle Offence_Vehicleoffence_id`=vehicle_offence.vehicleoffence_id
inner join vehicle
on vehicle.`Vehicle_Full number`=vehicle_offence.vehicleoffence_id
where `offence type`.Offencetype_id='';
--

-- select all licences belonging to a class
select distinct licence.`licence_id`,`licence vehicle class`.licenceclass_id,
`licence vehicle class`.`issue date`,`licence vehicle class`.`expiry date`
from licence
inner join `licence vehicle class`
on licence.`LICENCE VEHICLE CLASS_licenceclass_id`=`licence vehicle class`.licenceclass_id;
--

-- select all vehicles belonging to a class
select distinct vehicle.`Vehicle_Full number`,`vehicle class`.class_id
from vehicle
inner join `vehicle class`
on vehicle.`VEHICLE CLASS_Vehicleclass_id`=`vehicle class`.class_id;
-- 

-- select all licence offences issued by a traffic police
select distinct `traffic police`.police_id,`licence offence`.licenceoffence_id,`licence offence`.`date of licence offence`
from `licence offence`
inner join `traffic police`
on `licence offence`.`TRAFFIC POLICE_police_id`=`traffic police`.police_id; 
-- 

-- select all vehicle offences issued by a traffic police
select distinct `traffic police`.police_id,`vehicle_offence`.vehicleoffence_id,`vehicle_offence`.`date_of_vehicle_offence`
from `vehicle_offence`
inner join `traffic police`
on `vehicle_offence`.`tRAFFIC_POLICE_police_ide`=`traffic police`.police_id
#GROUP BY `vehicle_offence`.`date_of_vehicle_offence`;
where `vehicle_offence`.`date_of_vehicle_offence`='';
-- 

-- select all licence offences with a repetition count
select distinct `offence type`.Offencetype_id,  -- `licence offence`.Licenceoffence_id,-- 
licence.Licence_id,COUNT(`licence offence`.Licenceoffence_id) as `no. of times licence offence repeated`,
`licence offence`.`date of licence offence`,`licence offence`.panchayat
from `offence type`
inner join `licence offence`
on `offence type`.Licenceoffence_Licenceoffence_id= `licence offence`.Licenceoffence_id
inner join licence
on licence.Licence_id=`licence offence`.LICENCE_Licence_id;
--

-- select all vehicle offences with a repetitive count
select distinct `offence type`.Offencetype_id,-- vehicle_offence.vehicleoffence_id,-- 
vehicle.`Vehicle_Full number`,
COUNT(vehicle_offence.vehicleoffence_id) as `no. of times vehicle offence repeated`,
vehicle_offence.date_of_vehicle_offence,vehicle_offence.panchayat
from `offence type`
inner join vehicle_offence
on `offence type`.`Vehicle Offence_Vehicleoffence_id`=vehicle_offence.vehicleoffence_id
inner join vehicle
on vehicle.`Vehicle_Full number`=vehicle_offence.vehicleoffence_id;
-- 

-- select all vehicle offences at  particular location/in a particular locality
select distinct vehicle.`Vehicle_Full number`, vehicle_offence.vehicleoffence_id,vehicle_offence.panchayat
from vehicle_offence
inner join vehicle
on vehicle.`Vehicle_Full number`=vehicle_offence.VEHICLE_Vehicle_Fullnumber;
-- 

-- select all licence offences at  particular location/in a particular locality
select distinct licence.`Licence_id`, `licence offence`.licenceoffence_id,`licence offence`.panchayat
from `licence offence`
inner join licence
on licence.`Licence_id`=`licence offence`.LICENCE_Licence_id;
-- 

-- select most frequent licence offences in a period
select -- `offence type`.Offencetype_id,  -- `licence offence`.Licenceoffence_id,-- 
licence.Licence_id,`licence offence`.Licenceoffence_id,
`licence offence`.`date of licence offence`,`licence offence`.panchayat,
COUNT(`licence offence`.Licenceoffence_id) as `most frequent licenceoffence_id`
#from `offence type`
#inner join `licence offence`
#on `offence type`.Licenceoffence_Licenceoffence_id= `licence offence`.Licenceoffence_id
from `licence offence`
inner join licence
on licence.Licence_id=`licence offence`.LICENCE_Licence_id
group by `licence offence`.Licenceoffence_id
order by `most frequent licenceoffence_id` DESC
LIMIT 1
;
--

-- select most frequent vehicle offences in a period
select -- `offence type`.Offencetype_id,-- vehicle_offence.vehicleoffence_id,-- 
vehicle.`Vehicle_Full number`,
vehicle_offence.vehicleoffence_id,
vehicle_offence.date_of_vehicle_offence,vehicle_offence.panchayat,
COUNT(vehicle_offence.vehicleoffence_id) as `most frequent vehicleoffence_id`
-- from `offence type`
-- inner join vehicle_offence
-- on `offence type`.`Vehicle Offence_Vehicleoffence_id`=vehicle_offence.vehicleoffence_id
from vehicle_offence
inner join vehicle
on vehicle.`Vehicle_Full number`=vehicle_offence.vehicleoffence_id
group by vehicle_offence.vehicleoffence_id
order by `most frequent vehicleoffence_id` DESC
LIMIT 1
;
-- 